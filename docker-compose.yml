services:
  web:
    build: ./web
    container_name: ${WEB_NAME}
    environment:
      - DJANGO_SETTINGS_MODULE=dcw_project.settings
      - API_HOST_NAME=${API_NAME}
      - API_PORT=${API_PORT}
      - DB_HOST=${WEB_DB_NAME}
      - DB_DB=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        python3 manage.py makemigrations
        python3 manage.py migrate
        python3 manage.py runserver 0.0.0.0:${WEB_PORT}

    depends_on:
      web-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - network_front
      - network_back

  data-api:
    build: ./data-api
    container_name: ${API_NAME}
    environment:
      - DJANGO_SETTINGS_MODULE=dca_project.settings
      - DB_HOST=${WEB_DB_NAME}
      - DB_DB=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py loaddata data.json
        python manage.py runserver 0.0.0.0:${API_PORT}
        

    depends_on:
      data-db:
        condition: service_healthy
    networks:
      - network_back

  web-db:
    image: postgres:13
    container_name: ${WEB_DB_NAME}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ./web-db/:/var/lib/postgresql/data/
    networks:
      - network_back

  data-db:
    image: postgres:13
    container_name: ${DATA_DB_NAME}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ./data-db/:/var/lib/postgresql/data/
    networks:
      - network_back
networks:
  network_front:
    driver: bridge
  network_back:
    driver: bridge
    internal: true
